gender = "男性",
func = "Logit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#14: 20 x 59 x F x Logit x ExclUnemp----
m <- lm(jsei_mean_20 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_20 + age + ps, family = binomial(link = "logit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_20")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "20",
maxage = "59",
gender = "女性",
func = "Logit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#15: 20 x 59 x M x Probit x ExclUnemp----
m <- lm(jsei_mean_20 ~ age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- glm(curwork ~ jsei_mean_20 + age + ps, family = binomial(link = "probit"), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_20")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "20",
maxage = "59",
gender = "男性",
func = "Probit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#16: 20 x 59 x F x Probit x ExclUnemp----
m <- lm(jsei_mean_20 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_20 + age + ps, family = binomial(link = "probit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_20")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "20",
maxage = "59",
gender = "女性",
func = "Probit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#___JSEI=30_______----
#1: 30 x 59 x M x Gam x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- gam(curwork ~ s(jsei_mean_30) + s(unemprate, age, ps, k = knot), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "GAM",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#2: 30 x 59 x F x Gam x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- gam(curwork ~ s(jsei_mean_30) + s(unemprate, age, ps, k = knot), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "GAM",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#3: 30 x 59 x M x Lpm x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- estimatr::lm_robust(curwork ~ jsei_mean_30 + unemprate + age + ps, data = mv1)
RobCheck <- mv1 |> broom::tidy() |> tidyr::as_tibble() |>
dplyr::filter(term == "jsei_mean_30") |>
dplyr::select(term, estimate, conf.low, conf.high, p.value) |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "LPM",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#4: 30 x 59 x F x Lpm x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- estimatr::lm_robust(curwork ~ jsei_mean_30 + unemprate + age + ps, data = mv2)
RobCheck <- mv2 |> broom::tidy() |> tidyr::as_tibble() |>
dplyr::filter(term == "jsei_mean_30") |>
dplyr::select(term, estimate, conf.low, conf.high, p.value) |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "LPM",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#5: 30 x 59 x M x Logit x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- glm(curwork ~ jsei_mean_30 + unemprate + age + ps, family = binomial(link = "logit"), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "Logit",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#6: 30 x 59 x F x Logit x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_30 + unemprate + age + ps, family = binomial(link = "logit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "Logit",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#7: 30 x 59 x M x Probit x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- glm(curwork ~ jsei_mean_30 + unemprate + age + ps, family = binomial(link = "probit"), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "Probit",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#8: 30 x 59 x F x Probit x IncUnemp----
m <- lm(jsei_mean_30 ~ unemprate + age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_30 + unemprate + age + ps, family = binomial(link = "probit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "Probit",
unemp = "無業含む") |>
dplyr::bind_rows(RobCheck)
#9: 30 x 59 x M x Gam x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- gam(curwork ~ s(jsei_mean_30) + s(age, ps), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "GAM",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#10: 30 x 59 x F x Gam x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- gam(curwork ~ s(jsei_mean_30) + s(age, ps), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "GAM",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#11: 30 x 59 x M x Lpm x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- estimatr::lm_robust(curwork ~ jsei_mean_30 + age + ps, data = mv1)
RobCheck <- mv1 |> broom::tidy() |> tidyr::as_tibble() |>
dplyr::filter(term == "jsei_mean_30") |>
dplyr::select(term, estimate, conf.low, conf.high, p.value) |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "LPM",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#12: 30 x 59 x F x Lpm x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- estimatr::lm_robust(curwork ~ jsei_mean_30 + age + ps, data = mv2)
RobCheck <- mv2 |> broom::tidy() |> tidyr::as_tibble() |>
dplyr::filter(term == "jsei_mean_30") |>
dplyr::select(term, estimate, conf.low, conf.high, p.value) |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "LPM",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#13: 30 x 59 x M x Logit x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- glm(curwork ~ jsei_mean_30 + age + ps, family = binomial(link = "logit"), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "Logit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#14: 30 x 59 x F x Logit x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_30 + age + ps, family = binomial(link = "logit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "Logit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#15: 30 x 59 x M x Probit x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_male_mv)
mv1 <- old_male_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv1 <- glm(curwork ~ jsei_mean_30 + age + ps, family = binomial(link = "probit"), data = mv1)
mv1 <- marginaleffects::marginaleffects(mv1, variables = "jsei_mean_30")
RobCheck <- mv1 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "男性",
func = "Probit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
#16: 30 x 59 x F x Probit x ExclUnemp----
m <- lm(jsei_mean_30 ~ age + univ + father_univ, data = old_female_mv)
mv2 <- old_female_mv |>
dplyr::mutate(ps = predict(m, type = "response"))
mv2 <- glm(curwork ~ jsei_mean_30 + age + ps, family = binomial(link = "probit"), data = mv2)
mv2 <- marginaleffects::marginaleffects(mv2, variables = "jsei_mean_30")
RobCheck <- mv2 |> summary() |>
dplyr::mutate(unemp_score = "30",
maxage = "59",
gender = "女性",
func = "Probit",
unemp = "無業除く") |>
dplyr::bind_rows(RobCheck)
# Viz----
# 推定でデータの作成
RobCheckPlot <- RobCheck |>
dplyr::arrange(-estimate) |>
dplyr::mutate(row = dplyr::row_number())
# 可視化
Estimate <- RobCheckPlot |>
ggplot2::ggplot(aes(x = row, y = estimate)) +
geom_hline(yintercept = 0) +
geom_point(aes(shape = `gender`)) +
geom_linerange(aes(ymin = conf.low, ymax = conf.high)) +
gghighlight::gghighlight(p.value < 0.05) +
theme_grey(base_family = "SourceHanSans-Regular") +
theme(axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "top") +
scale_y_continuous(limits = c(-0.04, 0.04)) +
ggplot2::labs(y = "推定値")
# 決定点の同定
DecPoint <- RobCheckPlot |>
dplyr::mutate(`〜64歳` = dplyr::if_else(maxage == "64", TRUE, FALSE),
`〜59歳` = dplyr::if_else(maxage == "59", TRUE, FALSE),
`〜54歳` = dplyr::if_else(maxage == "54", TRUE, FALSE),
`無業0` = dplyr::if_else(unemp_score == "0", TRUE, FALSE),
`無業10` = dplyr::if_else(unemp_score == "10", TRUE, FALSE),
`無業20` = dplyr::if_else(unemp_score == "20", TRUE, FALSE),
`無業30` = dplyr::if_else(unemp_score == "30", TRUE, FALSE),
`GAM` = dplyr::if_else(func == "GAM", TRUE, FALSE),
`LPM` = dplyr::if_else(func == "LPM", TRUE, FALSE),
`Logit` = dplyr::if_else(func == "Logit", TRUE, FALSE),
`Probit` = dplyr::if_else(func == "Probit", TRUE, FALSE),
`無業含む` = dplyr::if_else(unemp == "無業含む", TRUE, FALSE),
`無業除く` = dplyr::if_else(unemp == "無業除く", TRUE, FALSE),
) |>
tidyr::pivot_longer(`〜64歳`:`無業除く`,
names_to = "SpecificationItem",
values_to = "Appli") |>
dplyr::mutate(ItemNum = dplyr::row_number())
DecP <- DecPoint |>
# dplyr::filter(gender == "男性") |>
ggplot2::ggplot(aes(x = row, y = SpecificationItem)) +
ggplot2::geom_point() +
gghighlight::gghighlight(Appli == TRUE, unhighlighted_colour = "white") +
theme_grey(base_family = "SourceHanSans-Regular") +
theme(strip.background = element_rect(color="white", fill="white"),
strip.text = element_text(color = "white")) +
ggplot2::labs(y = "決定点",
x = "番号")
MultiVerse <- ggarrange(Estimate, DecP, nrow = 2, ncol = 1, align = "v")
MultiVerse
library(renv)
renv::init()
# tidyverse
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
# SPSS, Stata, SASのデータを読み込む
if (!require("haven")) {
install.packages("haven")
library(haven)
}
if (!require("foreign")) {
install.packages("foreign")
library(foreign)
}
# 可視化
if (!require("ggpubr")) {
install.packages("ggpubr")
library(ggpubr)
}
# 可視化
if (!require("gghighlight")) {
install.packages("gghighlight")
library(gghighlight)
}
# 記述統計量
if (!require("gtsummary")) {
install.packages("gtsummary")
library(gtsummary)
}
# 記述統計量
if (!require("flextable")) {
install.packages("flextable")
library(flextable)
}
# DAG
if (!require("dagitty")) {
install.packages("dagitty")
library("dagitty")
}
# DAG
if (!require("ggdag")) {
install.packages("ggdag",
dependencies = TRUE)
library("ggdag")
}
#デフォルトの29パッケージ
Pack <- c("base","boot","class","cluster","codetools",
"compiler","datasets","foreign","graphics",
"grDevices","grid","KernSmooth","lattice",
"MASS","Matrix","methods","mgcv","nlme","nnet",
"parallel","rpart","spatial","splines","stats",
"stats4","survival","tcltk","tools","utils")
#デフォルトパッケージ以外を選択する
a <- data.frame(installed.packages())$Package
b <- a[!a %in% Pack]
#インストールしたパッケージを削除する
utils::remove.packages(pkgs=b)
# tidyverse
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
#デフォルトの29パッケージ
Pack <- c("base","boot","class","cluster","codetools",
"compiler","datasets","foreign","graphics",
"grDevices","grid","KernSmooth","lattice",
"MASS","Matrix","methods","mgcv","nlme","nnet",
"parallel","rpart","spatial","splines","stats",
"stats4","survival","tcltk","tools","utils")
#デフォルトパッケージ以外を選択する
a <- data.frame(installed.packages())$Package
b <- a[!a %in% Pack]
#インストールしたパッケージを削除する
utils::remove.packages(pkgs=b)
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
library(renv)
renv::init()
#デフォルトの29パッケージ
Pack <- c("base","boot","class","cluster","codetools",
"compiler","datasets","foreign","graphics",
"grDevices","grid","KernSmooth","lattice",
"MASS","Matrix","methods","mgcv","nlme","nnet",
"parallel","rpart","spatial","splines","stats",
"stats4","survival","tcltk","tools","utils")
#デフォルトパッケージ以外を選択する
a <- data.frame(installed.packages())$Package
b <- a[!a %in% Pack]
#インストールしたパッケージを削除する
utils::remove.packages(pkgs=b)
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
library(renv)
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
#デフォルトの29パッケージ
Pack <- c("base","boot","class","cluster","codetools",
"compiler","datasets","foreign","graphics",
"grDevices","grid","KernSmooth","lattice",
"MASS","Matrix","methods","mgcv","nlme","nnet",
"parallel","rpart","spatial","splines","stats",
"stats4","survival","tcltk","tools","utils")
#デフォルトパッケージ以外を選択する
a <- data.frame(installed.packages())$Package
b <- a[!a %in% Pack]
#インストールしたパッケージを削除する
utils::remove.packages(pkgs=b)
install.packages("renv")
library(renv)
install.packages("renv")
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
renv::init()
# tidyverse
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
# renv
if (!require("renv")) {
install.packages("renv")
library(renv)
}
# SPSS, Stata, SASのデータを読み込む
if (!require("haven")) {
install.packages("haven")
library(haven)
}
if (!require("foreign")) {
install.packages("foreign")
library(foreign)
}
# 可視化
if (!require("ggpubr")) {
install.packages("ggpubr")
library(ggpubr)
}
# 可視化
if (!require("gghighlight")) {
install.packages("gghighlight")
library(gghighlight)
}
# 記述統計量
if (!require("gtsummary")) {
install.packages("gtsummary")
library(gtsummary)
}
# 記述統計量
if (!require("flextable")) {
install.packages("flextable")
library(flextable)
}
# DAG
if (!require("dagitty")) {
install.packages("dagitty")
library("dagitty")
}
# DAG
if (!require("ggdag")) {
install.packages("ggdag",
dependencies = TRUE)
library("ggdag")
}
library("ggdag")
# DAG
if (!require("ggdag")) {
install.packages("ggdag",
dependencies = TRUE)
library("ggdag")
}
# Gam
if (!require("mgcv")) {
install.packages("mgcv")
library("mgcv")
}
# AME
if (!require("marginaleffects")) {
install.packages('https://cran.r-project.org/src/contrib/Archive/marginaleffects/marginaleffects_0.8.1.tar.gz', repos=NULL, type='source')
library("marginaleffects")
}
renv::snapshot()
